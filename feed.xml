<?xml version="1.0" encoding="UTF-8"?>
  <rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Ramda Feed</title>
      <description>Get a new Ramda method in your RSS feed each day.</description>
      <link>https://ramda-feed.openode.io/</link>
      <lastBuildDate>Mon, 08 Jun 2020 03:23:41 GMT</lastBuildDate>
      <atom:link href="https://ramda-feed.openode.io/feed" rel="self" type="application/rss+xml" />
      
          <item>
            <title>
                <![CDATA[Ramda: Ramda: ifElse]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#ifElse&quot;&gt;ifElse&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;Logic&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/ifElse.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;(*&amp;#x2026; &amp;#x2192; Boolean) &amp;#x2192; (*&amp;#x2026; &amp;#x2192; *) &amp;#x2192; (*&amp;#x2026; &amp;#x2192; *) &amp;#x2192; (*&amp;#x2026; &amp;#x2192; *)&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;condition&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;A predicate function&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;onTrue&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;A function to invoke when the &lt;code&gt;condition&lt;/code&gt; evaluates to a truthy value.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;onFalse&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;A function to invoke when the &lt;code&gt;condition&lt;/code&gt; evaluates to a falsy value.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;function&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;A new function that will process either the `onTrue` or the `onFalse`
                   function depending upon the result of the `condition` predicate.&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.8.0&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Creates a function that will process either the &lt;code&gt;onTrue&lt;/code&gt; or the &lt;code&gt;onFalse&lt;/code&gt;
function depending upon the result of the &lt;code&gt;condition&lt;/code&gt; predicate.&lt;/p&gt;
&lt;/div&gt;



            &lt;div class=&quot;see&quot;&gt;
                See also
                &lt;a href=&quot;https://ramdajs.com/docs/#unless&quot;&gt;unless&lt;/a&gt;,
                &lt;a href=&quot;https://ramdajs.com/docs/#when&quot;&gt;when&lt;/a&gt;,
                &lt;a href=&quot;https://ramdajs.com/docs/#cond&quot;&gt;cond&lt;/a&gt;.
            &lt;/div&gt;

	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; incCount = R.ifElse(
  R.has(&lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;count&amp;apos;&lt;/span&gt;),
  R.over(R.lensProp(&lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;count&amp;apos;&lt;/span&gt;), R.inc),
  R.assoc(&lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;count&amp;apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)
);
incCount({});           &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; { count: 1 }&lt;/span&gt;
incCount({ &lt;span class=&quot;hljs-attr&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; }); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; { count: 2 }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#ifElse</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#ifElse</guid>
            <pubDate>Mon, 08 Jun 2020 05:53:45 GMT</pubDate>
          </item>
          
          <item>
            <title>
                <![CDATA[Ramda: Ramda: forEach]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#forEach&quot;&gt;forEach&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;List&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/forEach.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;(a &amp;#x2192; *) &amp;#x2192; [a] &amp;#x2192; [a]&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;fn&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The function to invoke. Receives one argument, &lt;code&gt;value&lt;/code&gt;.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;list&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The list to iterate over.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;The original list.&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.1.1&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Iterate over an input &lt;code&gt;list&lt;/code&gt;, calling a provided function &lt;code&gt;fn&lt;/code&gt; for each
element in the list.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fn&lt;/code&gt; receives one argument: &lt;em&gt;(value)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;R.forEach&lt;/code&gt; does not skip deleted or unassigned indices (sparse
arrays), unlike the native &lt;code&gt;Array.prototype.forEach&lt;/code&gt; method. For more
details on this behavior, see:
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also note that, unlike &lt;code&gt;Array.prototype.forEach&lt;/code&gt;, Ramda&amp;apos;s &lt;code&gt;forEach&lt;/code&gt; returns
the original array. In some libraries this function is named &lt;code&gt;each&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dispatches to the &lt;code&gt;forEach&lt;/code&gt; method of the second argument, if present.&lt;/p&gt;
&lt;/div&gt;



            &lt;div class=&quot;see&quot;&gt;
                See also
                &lt;a href=&quot;https://ramdajs.com/docs/#addIndex&quot;&gt;addIndex&lt;/a&gt;.
            &lt;/div&gt;

	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; printXPlusFive = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;console&lt;/span&gt;.log(x + &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);
R.forEach(printXPlusFive, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [1, 2, 3]&lt;/span&gt;
&lt;span class=&quot;hljs-comment&quot;&gt;// logs 6&lt;/span&gt;
&lt;span class=&quot;hljs-comment&quot;&gt;// logs 7&lt;/span&gt;
&lt;span class=&quot;hljs-comment&quot;&gt;// logs 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#forEach</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#forEach</guid>
            <pubDate>Mon, 08 Jun 2020 05:52:55 GMT</pubDate>
          </item>
          
          <item>
            <title>
                <![CDATA[Ramda: Ramda: innerJoin]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#innerJoin&quot;&gt;innerJoin&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;Relation&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/innerJoin.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;((a, b) &amp;#x2192; Boolean) &amp;#x2192; [a] &amp;#x2192; [b] &amp;#x2192; [a]&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;pred&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;xs&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;ys&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.24.0&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Takes a predicate &lt;code&gt;pred&lt;/code&gt;, a list &lt;code&gt;xs&lt;/code&gt;, and a list &lt;code&gt;ys&lt;/code&gt;, and returns a list
&lt;code&gt;xs&amp;apos;&lt;/code&gt; comprising each of the elements of &lt;code&gt;xs&lt;/code&gt; which is equal to one or more
elements of &lt;code&gt;ys&lt;/code&gt; according to &lt;code&gt;pred&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pred&lt;/code&gt; must be a binary function expecting an element from each list.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xs&lt;/code&gt;, &lt;code&gt;ys&lt;/code&gt;, and &lt;code&gt;xs&amp;apos;&lt;/code&gt; are treated as sets, semantically, so ordering should
not be significant, but since &lt;code&gt;xs&amp;apos;&lt;/code&gt; is ordered the implementation guarantees
that its values are in the same order as they appear in &lt;code&gt;xs&lt;/code&gt;. Duplicates are
not removed, so &lt;code&gt;xs&amp;apos;&lt;/code&gt; may contain duplicates if &lt;code&gt;xs&lt;/code&gt; contains duplicates.&lt;/p&gt;
&lt;/div&gt;



            &lt;div class=&quot;see&quot;&gt;
                See also
                &lt;a href=&quot;https://ramdajs.com/docs/#intersection&quot;&gt;intersection&lt;/a&gt;.
            &lt;/div&gt;

	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;R.innerJoin(
  &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;record, id&lt;/span&gt;) =&amp;gt;&lt;/span&gt; record.id === id,
  [{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;824&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;Richie Furay&amp;apos;&lt;/span&gt;},
   {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;956&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;Dewey Martin&amp;apos;&lt;/span&gt;},
   {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;313&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;Bruce Palmer&amp;apos;&lt;/span&gt;},
   {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;456&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;Stephen Stills&amp;apos;&lt;/span&gt;},
   {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;177&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;Neil Young&amp;apos;&lt;/span&gt;}],
  [&lt;span class=&quot;hljs-number&quot;&gt;177&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;456&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;999&lt;/span&gt;]
);
&lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [{id: 456, name: &amp;apos;Stephen Stills&amp;apos;}, {id: 177, name: &amp;apos;Neil Young&amp;apos;}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#innerJoin</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#innerJoin</guid>
            <pubDate>Mon, 08 Jun 2020 05:51:59 GMT</pubDate>
          </item>
          
          <item>
            <title>
                <![CDATA[Ramda: Ramda: omit]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#omit&quot;&gt;omit&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;Object&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/omit.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;[String] &amp;#x2192; {String: *} &amp;#x2192; {String: *}&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;names&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;an array of String property names to omit from the new object&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;obj&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The object to copy from&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;A new object with properties from `names` not on it.&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.1.0&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Returns a partial copy of an object omitting the keys specified.&lt;/p&gt;
&lt;/div&gt;



            &lt;div class=&quot;see&quot;&gt;
                See also
                &lt;a href=&quot;https://ramdajs.com/docs/#pick&quot;&gt;pick&lt;/a&gt;.
            &lt;/div&gt;

	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;R.omit([&lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;d&amp;apos;&lt;/span&gt;], {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;}); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; {b: 2, c: 3}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#omit</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#omit</guid>
            <pubDate>Mon, 08 Jun 2020 05:51:29 GMT</pubDate>
          </item>
          
          <item>
            <title>
                <![CDATA[Ramda: Ramda: transpose]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#transpose&quot;&gt;transpose&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;List&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/transpose.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;[[a]] &amp;#x2192; [[a]]&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;list&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;A 2D list&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;A 2D list&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.19.0&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Transposes the rows and columns of a 2D list.
When passed a list of &lt;code&gt;n&lt;/code&gt; lists of length &lt;code&gt;x&lt;/code&gt;,
returns a list of &lt;code&gt;x&lt;/code&gt; lists of length &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;




	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;R.transpose([[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;c&amp;apos;&lt;/span&gt;]]) &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [[1, 2, 3], [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]]&lt;/span&gt;
R.transpose([[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;c&amp;apos;&lt;/span&gt;]]) &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [[1, &amp;apos;a&amp;apos;], [2, &amp;apos;b&amp;apos;], [3, &amp;apos;c&amp;apos;]]&lt;/span&gt;

&lt;span class=&quot;hljs-comment&quot;&gt;// If some of the rows are shorter than the following rows, their elements are skipped:&lt;/span&gt;
R.transpose([[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;], [], [&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;]]) &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [[10, 20, 30], [11, 31], [32]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#transpose</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#transpose</guid>
            <pubDate>Mon, 08 Jun 2020 05:50:41 GMT</pubDate>
          </item>
          
          <item>
            <title>
                <![CDATA[Ramda: Ramda: takeWhile]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#takeWhile&quot;&gt;takeWhile&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;List&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/takeWhile.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;(a &amp;#x2192; Boolean) &amp;#x2192; [a] &amp;#x2192; [a]&lt;/code&gt;&lt;/div&gt;
            &lt;div&gt;&lt;code&gt;(a &amp;#x2192; Boolean) &amp;#x2192; String &amp;#x2192; String&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;fn&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The function called per iteration.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;xs&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The collection to iterate over.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;A new array.&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.1.0&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Returns a new list containing the first &lt;code&gt;n&lt;/code&gt; elements of a given list,
passing each value to the supplied predicate function, and terminating when
the predicate function returns &lt;code&gt;false&lt;/code&gt;. Excludes the element that caused the
predicate function to fail. The predicate function is passed one argument:
&lt;em&gt;(value)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Dispatches to the &lt;code&gt;takeWhile&lt;/code&gt; method of the second argument, if present.&lt;/p&gt;
&lt;p&gt;Acts as a transducer if a transformer is given in list position.&lt;/p&gt;
&lt;/div&gt;



            &lt;div class=&quot;see&quot;&gt;
                See also
                &lt;a href=&quot;https://ramdajs.com/docs/#dropWhile&quot;&gt;dropWhile&lt;/a&gt;,
                &lt;a href=&quot;https://ramdajs.com/docs/#transduce&quot;&gt;transduce&lt;/a&gt;,
                &lt;a href=&quot;https://ramdajs.com/docs/#addIndex&quot;&gt;addIndex&lt;/a&gt;.
            &lt;/div&gt;

	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; isNotFour = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x !== &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;

R.takeWhile(isNotFour, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [1, 2, 3]&lt;/span&gt;

R.takeWhile(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x !== &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;d&amp;apos;&lt;/span&gt; , &lt;span class=&quot;hljs-string&quot;&gt;&amp;apos;Ramda&amp;apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; &amp;apos;Ram&amp;apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#takeWhile</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#takeWhile</guid>
            <pubDate>Mon, 08 Jun 2020 05:50:31 GMT</pubDate>
          </item>
          
          <item>
            <title>
                <![CDATA[Ramda: Ramda: all]]>
            </title>
            <description>
                <![CDATA[&lt;section class=&quot;card&quot;&gt;
            &lt;h2&gt;
                &lt;a tabindex=&quot;2&quot; class=&quot;name&quot; href=&quot;https://ramdajs.com/docs/#all&quot;&gt;all&lt;/a&gt;
                &lt;span class=&quot;pull-right&quot;&gt;
                        &lt;span class=&quot;label label-category&quot;&gt;List&lt;/span&gt;
                        &lt;a target=&quot;_blank&quot; title=&quot;View source on GitHub&quot; href=&quot;https://github.com/ramda/ramda/tree/v0.27.0/source/all.js&quot;&gt;&lt;small class=&quot;glyphicon glyphicon-new-window&quot;&gt;&lt;/small&gt;&lt;/a&gt;
                &lt;/span&gt;
            &lt;/h2&gt;


            &lt;div&gt;&lt;code&gt;(a &amp;#x2192; Boolean) &amp;#x2192; [a] &amp;#x2192; Boolean&lt;/code&gt;&lt;/div&gt;


            &lt;div class=&quot;params&quot; data-expanded=&quot;false&quot;&gt;
                &lt;a href=&quot;https://ramdajs.com/docs/#expand&quot; class=&quot;toggle-params&quot;&gt;Parameters&lt;/a&gt;
                &lt;div class=&quot;details panel panel-default&quot;&gt;
                    &lt;ul class=&quot;list-group&quot;&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;fn&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The predicate function.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;list-group-item&quot;&gt;
                            &lt;span class=&quot;type&quot;&gt;
                            &lt;/span&gt;
                            &lt;span class=&quot;name&quot;&gt;list&lt;/span&gt;
                            &lt;span class=&quot;description&quot;&gt;&lt;p&gt;The array to consider.&lt;/p&gt;
&lt;/span&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div class=&quot;panel-body&quot;&gt;
                        &lt;span class=&quot;returns&quot;&gt;Returns&lt;/span&gt;
                        &lt;span class=&quot;type&quot;&gt;Boolean&lt;/span&gt;
                        &lt;span class=&quot;description&quot;&gt;`true` if the predicate is satisfied by every element, `false`
        otherwise.&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;small&gt;Added in v0.1.0&lt;/small&gt;&lt;/p&gt;

            &lt;div class=&quot;description&quot;&gt;&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if all elements of the list match the predicate, &lt;code&gt;false&lt;/code&gt; if
there are any that don&amp;apos;t.&lt;/p&gt;
&lt;p&gt;Dispatches to the &lt;code&gt;all&lt;/code&gt; method of the second argument, if present.&lt;/p&gt;
&lt;p&gt;Acts as a transducer if a transformer is given in list position.&lt;/p&gt;
&lt;/div&gt;



            &lt;div class=&quot;see&quot;&gt;
                See also
                &lt;a href=&quot;https://ramdajs.com/docs/#any&quot;&gt;any&lt;/a&gt;,
                &lt;a href=&quot;https://ramdajs.com/docs/#none&quot;&gt;none&lt;/a&gt;,
                &lt;a href=&quot;https://ramdajs.com/docs/#transduce&quot;&gt;transduce&lt;/a&gt;.
            &lt;/div&gt;

	    &lt;pre&gt;&lt;code class=&quot;hljs javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; equals3 = R.equals(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);
R.all(equals3)([&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; true&lt;/span&gt;
R.all(equals3)([&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/section&gt;]]>
            </description>
            <link>https://ramdajs.com/docs/#all</link>
            <guid isPermaLink="true">https://ramdajs.com/docs/#all</guid>
            <pubDate>Mon, 08 Jun 2020 05:50:03 GMT</pubDate>
          </item>
          
    </channel>
  </rss>
